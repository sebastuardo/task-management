generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedTasks Task[]
  activities    TaskActivity[]
}

model Project {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  
  assigneeId  String?
  assignee    User?    @relation(fields: [assigneeId], references: [id])

  tags        Tag[]
  activities  TaskActivity[]

  @@index([status])
  @@index([priority])
  @@index([assigneeId])
  @@index([projectId])
  @@index([dueDate])
  @@index([status, priority])
  @@index([projectId, status])
  @@index([assigneeId, status])
  @@index([dueDate, status])
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())

  tasks     Task[]
}

model TaskActivity {
  id        String         @id @default(uuid())
  taskId    String?
  userId    String
  action    ActivityAction
  changes   Json?
  createdAt DateTime       @default(now())

  task      Task?          @relation(fields: [taskId], references: [id], onDelete: SetNull)
  user      User           @relation(fields: [userId], references: [id])

  @@index([taskId])
  @@index([userId])
  @@index([createdAt])
  @@index([taskId, createdAt])
  @@index([action])
  @@index([userId, createdAt])
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ActivityAction {
  CREATED
  UPDATED
  DELETED
}
