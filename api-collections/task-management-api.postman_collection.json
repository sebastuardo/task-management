{
  "info": {
    "name": "Task Management API",
    "description": "API collection for the Task Management take-home assignment. Includes all endpoints for tasks, users, projects, and the activity log feature to be implemented.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Setup & Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Basic health check to ensure the API is running"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Retrieve all users. Use these IDs for task assignment."
          }
        }
      ]
    },
    {
      "name": "Projects",
      "item": [
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/projects",
              "host": ["{{baseUrl}}"],
              "path": ["projects"]
            },
            "description": "Retrieve all projects. Tasks must be associated with a project."
          }
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Get all tasks without any filters. Notice the performance with 100+ tasks."
          }
        },
        {
          "name": "Get Tasks with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks?status=TODO&priority=HIGH",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "TODO",
                  "description": "Filter by status: TODO, IN_PROGRESS, COMPLETED, CANCELLED"
                },
                {
                  "key": "priority",
                  "value": "HIGH",
                  "description": "Filter by priority: LOW, MEDIUM, HIGH, URGENT"
                },
                {
                  "key": "assigneeId",
                  "value": "{{userId}}",
                  "description": "Filter by assignee UUID",
                  "disabled": true
                },
                {
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "description": "Filter by project UUID",
                  "disabled": true
                },
                {
                  "key": "dueDateFrom",
                  "value": "2024-01-01T00:00:00Z",
                  "description": "Filter by due date range start",
                  "disabled": true
                },
                {
                  "key": "dueDateTo",
                  "value": "2024-12-31T23:59:59Z",
                  "description": "Filter by due date range end",
                  "disabled": true
                }
              ]
            },
            "description": "Get tasks with various filters. Try different combinations to test filtering performance."
          }
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Get a single task by ID with all related data"
          }
        },
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement new feature\",\n  \"description\": \"Add user authentication to the application\",\n  \"status\": \"TODO\",\n  \"priority\": \"HIGH\",\n  \"projectId\": \"{{projectId}}\",\n  \"assigneeId\": \"{{userId}}\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\",\n  \"tagIds\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task. Note: If assigneeId is provided, email notification will be sent (check response time)."
          }
        },
        {
          "name": "Create Task (Minimal)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Quick task\",\n  \"projectId\": \"{{projectId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a task with minimal required fields"
          }
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated task title\",\n  \"status\": \"IN_PROGRESS\",\n  \"priority\": \"URGENT\",\n  \"assigneeId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Update an existing task. Changing assigneeId triggers email notification."
          }
        },
        {
          "name": "Update Task Status Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"COMPLETED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Update only the status of a task"
          }
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Delete a task by ID"
          }
        }
      ]
    },
    {
      "name": "Activity Log (To Be Implemented)",
      "item": [
        {
          "name": "Get Task Activities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/activities?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "activities"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Get all activities for a specific task. This endpoint needs to be implemented."
          }
        },
        {
          "name": "Get All Activities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["activities"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Items per page"
                },
                {
                  "key": "userId",
                  "value": "{{userId}}",
                  "description": "Filter by user who made the change",
                  "disabled": true
                },
                {
                  "key": "action",
                  "value": "updated",
                  "description": "Filter by action type: created, updated, deleted",
                  "disabled": true
                },
                {
                  "key": "dateFrom",
                  "value": "2024-01-01T00:00:00Z",
                  "description": "Filter by date range start",
                  "disabled": true
                },
                {
                  "key": "dateTo",
                  "value": "2024-12-31T23:59:59Z",
                  "description": "Filter by date range end",
                  "disabled": true
                }
              ]
            },
            "description": "Get all activities across all tasks with optional filters. This endpoint needs to be implemented."
          }
        }
      ]
    },
    {
      "name": "Performance Testing",
      "item": [
        {
          "name": "Heavy Load - Get All Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Run this multiple times to observe N+1 query performance issues"
          }
        },
        {
          "name": "Test Email Delay",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test email notification delay\",\n  \"projectId\": \"{{projectId}}\",\n  \"assigneeId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "This request should take 2+ seconds due to synchronous email sending"
          }
        },
        {
          "name": "Complex Filter Test",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks?status=IN_PROGRESS&priority=HIGH&assigneeId={{userId}}&dueDateFrom=2024-01-01T00:00:00Z&dueDateTo=2024-12-31T23:59:59Z",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "IN_PROGRESS"
                },
                {
                  "key": "priority",
                  "value": "HIGH"
                },
                {
                  "key": "assigneeId",
                  "value": "{{userId}}"
                },
                {
                  "key": "dueDateFrom",
                  "value": "2024-01-01T00:00:00Z"
                },
                {
                  "key": "dateTo",
                  "value": "2024-12-31T23:59:59Z"
                }
              ]
            },
            "description": "Test performance with multiple filters applied"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "default"
    },
    {
      "key": "taskId",
      "value": "REPLACE_WITH_ACTUAL_TASK_ID",
      "type": "default"
    },
    {
      "key": "userId",
      "value": "REPLACE_WITH_ACTUAL_USER_ID",
      "type": "default"
    },
    {
      "key": "projectId",
      "value": "REPLACE_WITH_ACTUAL_PROJECT_ID",
      "type": "default"
    }
  ]
}
